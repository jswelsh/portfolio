{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ody7/lighthouse/repos/portfolio/src/Profile/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { HeroContent } from './HeroContent';\nimport { Container, Grid } from \"@material-ui/core\";\nimport { Footer } from '../Footer';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  root: {\n    flexGrow: 1\n  }\n}));\nconst gitHubUrl = 'https://api.github.com/users/jswelsh'; // const fetchGitHubData = axios.get(gitHubUrl);\n\n/* \n*/\n\nconst Profile = ({\n  darkState\n}) => {\n  _s();\n\n  const [gitHubData, setGitHubData] = useState();\n  useEffect(() => {\n    axios.get(gitHubUrl).then(function (response) {\n      // handle success\n      setGitHubData(response); // console.log(response);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n    axios.get('https://api.github.com/users/jswelsh/repos').then(function (response) {\n      // console.log(response);\n      // response.data.reduce(function(countMap, obj) {countMap[obj.language] = ++countMap[obj.language] || 1;return countMap}, {});\n      // console.log(response.data.reduce(function(countMap, obj) {countMap[obj.language] = ++countMap[obj.language] || 1;return countMap}, {}));\n      response.data.forEach(element => {\n        console.log(element.language, element.name);\n      });\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(HeroContent, {\n        gitHubData: gitHubData,\n        darkState: darkState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.cardGrid,\n        maxWidth: \"md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"cXCo8gwunPcqNnUIvIfJtteZqWk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Profile;\nexport { Profile };\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/ody7/lighthouse/repos/portfolio/src/Profile/index.js"],"names":["useEffect","useState","makeStyles","HeroContent","Container","Grid","Footer","axios","useStyles","theme","cardGrid","paddingTop","spacing","paddingBottom","root","flexGrow","gitHubUrl","Profile","darkState","gitHubData","setGitHubData","get","then","response","catch","error","console","log","data","forEach","element","language","name","classes"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;AAEA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADJ;AAERC,IAAAA,aAAa,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAD6B;AAKvCE,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAC;AADL;AALiC,CAAZ,CAAD,CAA5B;AAUA,MAAMC,SAAS,GAAE,sCAAjB,C,CACA;;AAGA;AACA;;AAGA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA;AADe,CAAD,KAEV;AAAA;;AAEJ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,EAA5C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACc,GAAN,CAAUL,SAAV,EACCM,IADD,CACM,UAAUC,QAAV,EAAoB;AACxB;AACAH,MAAAA,aAAa,CAACG,QAAD,CAAb,CAFwB,CAGxB;AACD,KALD,EAMCC,KAND,CAMO,UAAUC,KAAV,EAAiB;AACtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KATD;AAWElB,IAAAA,KAAK,CAACc,GAAN,CAAU,4CAAV,EACCC,IADD,CACM,UAAUC,QAAV,EAAoB;AACxB;AACA;AACA;AACAA,MAAAA,QAAQ,CAACK,IAAT,CAAcC,OAAd,CAAsBC,OAAO,IAAI;AAC/BJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,OAAO,CAACC,QAApB,EAA8BD,OAAO,CAACE,IAAtC;AAED,OAHD;AAID,KATD,EAUCR,KAVD,CAUO,UAAUC,KAAV,EAAiB;AACtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAbC;AAcH,GA1BQ,EA0BP,EA1BO,CAAT;AA2BA,QAAMQ,OAAO,GAAGzB,SAAS,EAAzB;AACA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEyB,OAAO,CAACnB,IAAzB;AAAA,8BAEE,QAAC,WAAD;AACE,QAAA,UAAU,EAAEK,UADd;AAEE,QAAA,SAAS,EAAED;AAFb;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEe,OAAO,CAACvB,QAA9B;AAAwC,QAAA,QAAQ,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA8BE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA,kBADF;AAkCD,CAnED;;GAAMO,O;UAgCYT,S;;;KAhCZS,O;AAsEN,SAASA,OAAT","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { HeroContent } from './HeroContent'\nimport { Container, Grid } from \"@material-ui/core\";\n\nimport { Footer } from '../Footer'\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  root: {\n    flexGrow:1\n  },\n}));\n\nconst gitHubUrl ='https://api.github.com/users/jswelsh'\n// const fetchGitHubData = axios.get(gitHubUrl);\n\n\n/* \n*/\n\n\nconst Profile = ({\n  darkState\n}) => {\n\n  const [gitHubData, setGitHubData] = useState();\n  useEffect(() => {    \n    axios.get(gitHubUrl)\n    .then(function (response) {\n      // handle success\n      setGitHubData(response)\n      // console.log(response);\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n\n      axios.get('https://api.github.com/users/jswelsh/repos')\n      .then(function (response) {\n        // console.log(response);\n        // response.data.reduce(function(countMap, obj) {countMap[obj.language] = ++countMap[obj.language] || 1;return countMap}, {});\n        // console.log(response.data.reduce(function(countMap, obj) {countMap[obj.language] = ++countMap[obj.language] || 1;return countMap}, {}));\n        response.data.forEach(element => {\n          console.log(element.language, element.name)\n          \n        });\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n  },[]);\n  const classes = useStyles();\n  return (\n    <>\n      <main className={classes.root}>\n        {/* Hero unit */}\n        <HeroContent\n          gitHubData={gitHubData}\n          darkState={darkState}/>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n{/*           <Grid \n            container \n            justify=\"center\"\n            spacing={4}>\n            {charts.map((chart) =>\n            <Grid\n              item\n              key={project.header}\n              xs={12}\n              sm={12}\n              md={4}\n              lg={4}>\n              <ChartCard \n                technologies={project.technologies}\n                header={project.header}\n                image={project.image}\n                demo={project.demo}\n                repo={project.repo}/>\n            </Grid>)}\n          </Grid>*/}\n        </Container>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\n\nexport { Profile }"]},"metadata":{},"sourceType":"module"}